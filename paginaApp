import tkinter as tk
from tkinter import messagebox, ttk


dicionario_moveis = {
    'Cozinha': {
        'Armários de Cozinha': 1499.99,
        'Balcões de Cozinha': 199.99,
        'Banquetas de Cozinha': 74.99,
        'Mesas com Cadeiras': 999.99,
        'Fruteiras': 44.99,
        'Paneleiros': 289.99
    },
    'Quarto': {
        'Camas': 799.99,
        'Guarda-Roupas': 1199.99,
        'Cômodas': 499.99
    },
    'Sala': {
        'Sofás': 1999.99,
        'Estantes': 499.99,
        'Racks': 299.99
    },
    'Banheiro': {
        'Gabinetes': 399.99,
        'Espelhos': 149.99
    },
    'Escritório': {
        'Mesas de Escritório': 599.99,
        'Cadeiras de Escritório': 299.99,
        'Estantes de Escritório': 399.99
    }
}


carrinho = []


def buscar_movel(categoria, combobox, mensagem):
    movel_selecionado = combobox.get()
    valor = dicionario_moveis[categoria].get(movel_selecionado)
    
    if valor:
        mensagem['text'] = f'Valor do(a) {movel_selecionado} é de R$ {valor:.2f}'
        botao_adicionar = tk.Button(
            janela_categoria, 
            text="Adicionar ao Carrinho", 
            font=("Georgia", 12), 
            bg="#A9A9A9", 
            fg="#FFFFFF", 
            activebackground="#A0A0A0", 
            command=lambda: adicionar_ao_carrinho(movel_selecionado),
            width=20
        )
        botao_adicionar.pack(pady=10)
    else:
        mensagem['text'] = 'Móvel não encontrado'


def adicionar_ao_carrinho(movel_selecionado):
    for categoria in dicionario_moveis:
        if movel_selecionado in dicionario_moveis[categoria]:
            carrinho.append({'nome': movel_selecionado, 'quantidade': 1})
            messagebox.showinfo("Carrinho", f'{movel_selecionado} adicionado ao carrinho.')
            return
    messagebox.showerror("Erro", "Selecione um móvel válido para adicionar ao carrinho.")

def ver_carrinho():
    janela_carrinho = tk.Toplevel(janela)
    janela_carrinho.title("Carrinho de Compras")
    janela_carrinho.geometry("500x400")
    janela_carrinho.configure(bg='#FFFFFF')

    if carrinho:
        for widget in janela_carrinho.winfo_children():
            widget.destroy()

        tabela = ttk.Treeview(janela_carrinho, columns=("Produto", "Quantidade", "Preço"), show='headings')
        tabela.heading("Produto", text="Produto")
        tabela.heading("Quantidade", text="Quantidade")
        tabela.heading("Preço", text="Preço")
        tabela.pack(fill=tk.BOTH, expand=True)

        for item in carrinho:
            tabela.insert("", "end", values=(item['nome'], item['quantidade'], f"R$ {dicionario_moveis[next(categoria for categoria in dicionario_moveis if item['nome'] in dicionario_moveis[categoria])][item['nome']] * item['quantidade']:.2f}"))

        def remover_item():
            selected_item = tabela.selection()[0]
            item = tabela.item(selected_item)['values'][0]
            for produto in carrinho:
                if produto['nome'] == item:
                    carrinho.remove(produto)
                    break
            tabela.delete(selected_item)

        def atualizar_quantidade(event):
            selected_item = tabela.selection()[0]
            item = tabela.item(selected_item)['values'][0]
            quantidade = int(tabela.set(selected_item, "Quantidade"))
            for produto in carrinho:
                if produto['nome'] == item:
                    produto['quantidade'] = quantidade
                    tabela.set(selected_item, "Preço", f"R$ {dicionario_moveis[next(categoria for categoria in dicionario_moveis if produto['nome'] in dicionario_moveis[categoria])][produto['nome']] * quantidade:.2f}")
                    break

        tabela.bind('<Double-1>', atualizar_quantidade)

        botao_remover = tk.Button(janela_carrinho, text="Remover do Carrinho", font=("Georgia", 12), command=remover_item)
        botao_remover.pack(pady=10)

        botao_finalizar = tk.Button(janela_carrinho, text="Finalizar Compra", font=("Georgia", 12), bg="green", fg="white", command=finalizar_compra)
        botao_finalizar.pack(pady=10)
    else:
        messagebox.showinfo("Carrinho de Compras", "O carrinho está vazio.")


def finalizar_compra():
    if carrinho:
        total = sum(dicionario_moveis[next(categoria for categoria in dicionario_moveis if item['nome'] in dicionario_moveis[categoria])][item['nome']] * item['quantidade'] for item in carrinho)
        messagebox.showinfo("Compra Finalizada", f'Compra finalizada! Total: R$ {total:.2f}')
        carrinho.clear()
    else:
        messagebox.showinfo("Carrinho de Compras", "O carrinho está vazio.")


def abrir_janela_categoria(categoria):
    global janela_categoria
    janela_categoria = tk.Toplevel(janela)
    janela_categoria.title(f"Móveis para {categoria}")
    janela_categoria.geometry("450x400")
    janela_categoria.configure(bg='#F5F5F5')

    descricao_categoria = tk.Label(
        janela_categoria, 
        text=f"Selecione um móvel para {categoria}", 
        font=("Georgia", 14), 
        fg='black', 
        bg='#F5F5F5'
    )
    descricao_categoria.pack(pady=(10, 10))

    combobox_categoria = ttk.Combobox(
        janela_categoria, 
        values=list(dicionario_moveis[categoria].keys()), 
        font=("Georgia", 12), 
        width=30
    )
    combobox_categoria.pack(pady=10)

    botao_buscar_categoria = tk.Button(
        janela_categoria, 
        text="Buscar", 
        font=("Georgia", 12), 
        bg="#A9A9A9", 
        fg="#FFFFFF", 
        activebackground="#A0A0A0", 
        command=lambda: buscar_movel(categoria, combobox_categoria, mensagem_categoria),
        width=20
    )
    botao_buscar_categoria.pack(pady=10)

    mensagem_categoria = tk.Label(janela_categoria, text='', font=("Georgia", 12), fg='black', bg="#F5F5F5")
    mensagem_categoria.pack(pady=10)


janela = tk.Tk()
janela.title("Móveis & Estilo.com")
janela.geometry("450x500")
janela.configure(bg='#F5F5F5')


titulo_loja = tk.Label(
    janela, 
    text="Móveis & Estilo", 
    font=("Georgia", 20, "bold"), 
    fg='#4B3D31', 
    bg="white",
    height=2
)
titulo_loja.pack(fill='x', pady=(10, 20))


descricao = tk.Label(
    janela, 
    text="Sua melhor escolha em móveis!", 
    font=("Georgia", 14), 
    fg='black', 
    bg='#F5F5F5'
)
descricao.pack(pady=(0, 10))


frame_botoes = tk.Frame(janela, bg="#F5F5F5")
frame_botoes.pack(pady=(20, 0))

botao_cozinha = tk.Button(frame_botoes, text="Móveis para Cozinha", font=("Georgia", 10, "bold"), width=25, command=lambda: abrir_janela_categoria('Cozinha'))
botao_cozinha.grid(row=0, column=0, padx=5, pady=5)

botao_quarto = tk.Button(frame_botoes, text="Móveis para Quarto", font=("Georgia", 10, "bold"), width=25, command=lambda: abrir_janela_categoria('Quarto'))
botao_quarto.grid(row=0, column=1, padx=5, pady=5)

botao_sala = tk.Button(frame_botoes, text="Móveis para Sala", font=("Georgia", 10, "bold"), width=25, command=lambda: abrir_janela_categoria('Sala'))
botao_sala.grid(row=1, column=0, padx=5, pady=5)

botao_banheiro = tk.Button(frame_botoes, text="Móveis para Banheiro", font=("Georgia", 10, "bold"), width=25, command=lambda: abrir_janela_categoria('Banheiro'))
botao_banheiro.grid(row=1, column=1, padx=5, pady=5)

botao_escritorio = tk.Button(frame_botoes, text="Móveis para Escritório", font=("Georgia", 10, "bold"), width=25, command=lambda: abrir_janela_categoria('Escritório'))
botao_escritorio.grid(row=2, column=0, columnspan=2, padx=5, pady=5)


frame_carrinho = tk.Frame(janela, bg="#F5F5F5")
frame_carrinho.pack(pady=(20, 0))

botao_ver_carrinho = tk.Button(frame_carrinho, text="Ver Carrinho", font=("Georgia", 12), command=ver_carrinho)
botao_ver_carrinho.grid(row=0, column=0, padx=5, pady=5)

janela.mainloop()
